diff -ur gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libcore/as_value.h gnash/libcore/as_value.h
--- gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libcore/as_value.h	2015-03-17 00:10:12.000000000 +0900
+++ gnash/libcore/as_value.h	2015-05-12 12:26:11.796182333 +0900
@@ -26,7 +26,6 @@
 #include <type_traits>
 #include <cstdint>
 
-#include "utility.h" // for UNUSED
 #include "dsodefs.h" // for DSOTEXPORT
 #include "CharacterProxy.h"
 #include "GnashNumeric.h" // for isNaN
@@ -157,16 +156,14 @@
     {}
     
     /// Construct a primitive Boolean value
-    template <typename T>
-    as_value(T val, typename std::enable_if<std::is_same<bool, T>::value>::type*
-             dummy = 0)
+    template <typename T, typename U =
+        typename std::enable_if<std::is_same<bool, T>::value>::type>
+    as_value(T val)
         :
         _type(BOOLEAN),
         _value(val)
-	{
-        UNUSED(dummy);
-	}
-    
+    {}
+
     /// Construct a primitive Number value
     as_value(double num)
         :
diff -ur gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libcore/swf/SetTabIndexTag.cpp gnash/libcore/swf/SetTabIndexTag.cpp
--- gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libcore/swf/SetTabIndexTag.cpp	2015-03-17 00:10:12.000000000 +0900
+++ gnash/libcore/swf/SetTabIndexTag.cpp	2015-05-12 12:26:11.818182330 +0900
@@ -24,6 +24,7 @@
 #include "MovieClip.h"
 #include "GnashNumeric.h"
 #include "RunResources.h"
+#include "utility.h" // UNUSED
 
 namespace gnash {
 namespace SWF {
diff -ur gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libdevice/vaapi/VaapiContext.h gnash/libdevice/vaapi/VaapiContext.h
--- gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libdevice/vaapi/VaapiContext.h	2015-03-17 00:10:12.000000000 +0900
+++ gnash/libdevice/vaapi/VaapiContext.h	2015-05-12 12:26:11.825182329 +0900
@@ -84,7 +84,7 @@
     void releaseSurface(std::shared_ptr<VaapiSurface> surface);
 
     /// Set user data
-    void setData(std::unique_ptr<VaapiContextData> user_data) { _user_data = user_data; }
+    void setData(std::unique_ptr<VaapiContextData> user_data) { _user_data = std::move(user_data); }
 
     /// Get user data
     VaapiContextData *getData() const { return _user_data.get(); }
diff -ur gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libdevice/vaapi/VaapiGlobalContext.cpp gnash/libdevice/vaapi/VaapiGlobalContext.cpp
--- gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/libdevice/vaapi/VaapiGlobalContext.cpp	2015-03-17 00:10:12.000000000 +0900
+++ gnash/libdevice/vaapi/VaapiGlobalContext.cpp	2015-05-12 12:26:11.826182329 +0900
@@ -33,7 +33,7 @@
 namespace gnash {
 
 VaapiGlobalContext::VaapiGlobalContext(std::unique_ptr<VaapiDisplay> display)
-    : _display(display)
+    : _display(std::move(display))
 {
     GNASH_REPORT_FUNCTION;
 
@@ -145,7 +145,7 @@
             if (!dpy.get()) {
                 return NULL;
             }
-            vaapi_global_context.reset(new VaapiGlobalContext(dpy));
+            vaapi_global_context.reset(new VaapiGlobalContext(std::move(dpy)));
         }
         catch (...) {
             vaapi_set_is_enabled(false);
diff -ur gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/librender/cairo/Renderer_cairo.cpp gnash/librender/cairo/Renderer_cairo.cpp
--- gnash-6675d736bf4d78e7ece0879b98d0b19accb9611d/librender/cairo/Renderer_cairo.cpp	2015-03-17 00:10:12.000000000 +0900
+++ gnash/librender/cairo/Renderer_cairo.cpp	2015-05-12 12:26:11.836182328 +0900
@@ -111,7 +111,6 @@
         _data(data),
         _width(width),
         _height(height),
-        _bytes_per_pixel(bpp),
         _format(format),
         _surface(cairo_image_surface_create_for_data(_data.get(),
                  format, width, height, width * bpp)),
@@ -210,7 +209,6 @@
     std::unique_ptr<std::uint8_t[]> _data;
     int _width;
     int _height;
-    size_t _bytes_per_pixel;
     cairo_format_t _format;
     cairo_surface_t* _surface;
     cairo_pattern_t* _pattern;
